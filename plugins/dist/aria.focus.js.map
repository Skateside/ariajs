{"version":3,"names":[],"mappings":"","sources":["aria.focus.js"],"sourcesContent":["/**\r\n * @file    Adds functions to check whether an element should be able to gain\r\n *          focus.\r\n * @author  James \"Skateside\" Long\r\n * @license MIT\r\n */\r\n(function (ARIA) {\r\n\r\n    \"use strict\";\r\n\r\n    if (ARIA && ARIA.VERSION) {\r\n\r\n        /**\r\n         * A CSS selector identifying all elements that are automatically added\r\n         * into the tab order.\r\n         * @type {String}\r\n         * @see https://www.w3.org/TR/html5/editing.html#the-tabindex-attribute\r\n         */\r\n        ARIA.focusable = (\r\n            \"a[href],\" +\r\n            \"audio[controls],\" +\r\n            \"button,\" +\r\n            \"iframe,\" +\r\n            \"input:not([type=\\\"hidden\\\"]),\" +\r\n            \"link[href],\" +\r\n            \"select,\" +\r\n            \"textarea,\" +\r\n            \"video[controls],\" +\r\n            \"[contentEditable=\\\"true\\\"],\" +\r\n            \"[draggable],\" +\r\n            \"[tabindex]\"\r\n        );\r\n\r\n        /**\r\n         * Checks to see if the given element matches the given selector,\r\n         * returning true if it does.\r\n         *\r\n         * @function\r\n         * @param    {Element} element\r\n         *           Element to test.\r\n         * @param    {String} selector\r\n         *           CSS selector to check against.\r\n         * @return   {Boolean}\r\n         *           true if the element matches the given selector, false\r\n         *           otherwise.\r\n         */\r\n        ARIA.is = (\r\n            Element.prototype.matches\r\n            ? function (element, selector) {\r\n                return element.matches(selector);\r\n            }\r\n            : (\r\n                Element.prototype.msMatchesSelector\r\n                ? function (element, selector) {\r\n                    return element.msMatchesSelector(selector);\r\n                }\r\n                : function (element, selector) {\r\n\r\n                    var elements = document.querySelectorAll(selector);\r\n                    var length = elements.length;\r\n                    var isMatch = false;\r\n\r\n                    while (length) {\r\n\r\n                        length -= 1;\r\n\r\n                        if (elements[length] === element) {\r\n\r\n                            isMatch = true;\r\n                            break;\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                    return isMatch;\r\n\r\n                }\r\n            )\r\n        );\r\n\r\n        /**\r\n         * Checks to see if the given element is naturally able to gain focus.\r\n         * Be aware that this function doesn't test external factors which may\r\n         * affect the result such as whether the element is in the page or has\r\n         * a hidden parent.\r\n         *\r\n         * @param  {Element} element\r\n         *         Element to test.\r\n         * @return {Boolean}\r\n         *         true if the element should be able to gain focus, false\r\n         *         otherwise.\r\n         */\r\n        ARIA.isFocusable = function (element) {\r\n            return ARIA.is(element, ARIA.focusable);\r\n        };\r\n\r\n    }\r\n\r\n}(window.ARIA));\r\n"],"file":"aria.focus.js"}